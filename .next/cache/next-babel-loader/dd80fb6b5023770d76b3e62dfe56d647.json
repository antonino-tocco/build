{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { getAuthToken } from \"../helpers/authHelper\";\nimport { login, verifyToken } from \"../actions/auth.actions\";\nimport { LoginForm } from \"../components/forms/loginForm\";\nimport { getConfig } from \"../helpers/dataHelper\";\n\nconst _PrivateRouteContainer = ({\n  children,\n  isLogged,\n  login,\n  verifyToken\n}) => {\n  var _config$logo;\n\n  const [config, setConfig] = React.useState();\n\n  const _setup = async () => {\n    try {\n      const _config = await getConfig();\n\n      setConfig(_config);\n    } catch (error) {}\n  };\n\n  const _login = (username, password) => {\n    if (!!username && !!password) {\n      login(username, password);\n    }\n  };\n\n  const _verifyToken = () => {\n    const _authToken = getAuthToken();\n\n    if (!!_authToken && _authToken.trim().length > 0) {\n      verifyToken(_authToken);\n    }\n  };\n\n  useEffect(() => {\n    _setup();\n\n    _verifyToken();\n  }, []);\n  return __jsx(\"div\", null, isLogged ? {\n    children\n  } : __jsx(LoginForm, {\n    login: _login,\n    logo: (_config$logo = config === null || config === void 0 ? void 0 : config.logo) !== null && _config$logo !== void 0 ? _config$logo : null\n  }));\n};\n\nconst mapStateToProps = (state, props) => {\n  var _state$auth$isLogged;\n\n  return {\n    isLogged: (_state$auth$isLogged = state.auth.isLogged) !== null && _state$auth$isLogged !== void 0 ? _state$auth$isLogged : false\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  login: async (username, password) => await dispatch(login(username, password)),\n  verifyToken: async token => await dispatch(verifyToken(token))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(_PrivateRouteContainer);","map":null,"metadata":{},"sourceType":"module"}