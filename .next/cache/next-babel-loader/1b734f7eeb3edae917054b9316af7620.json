{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport PageContainer from \"../../components/page/pageContainer\";\nimport { defaultProps, getGlobalInitialProps } from \"../../helpers/propsHelper\";\nimport { getNewsList } from \"../../helpers/dataHelper\";\nimport { NewsCard } from \"../../components/cards/newsCard\";\n\nconst NewsList = () => {\n  const [newsList, setNewsList] = React.useState([]);\n\n  const setup = async () => {\n    try {\n      const news = await getNewsList();\n      setNewsList(news);\n    } catch (error) {}\n  };\n\n  React.useEffect(() => {\n    setup();\n  }, []);\n  return __jsx(PageContainer, null, __jsx(\"div\", {\n    className: \"container\"\n  }, (newsList !== null && newsList !== void 0 ? newsList : []).map(news => __jsx(\"div\", {\n    className: \"row\",\n    key: `news-${news.id}`\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(NewsCard, {\n    news: news\n  }))))));\n};\n\nasync function getStaticProps() {\n  try {\n    var _globalConfig$config, _globalConfig$menuIte;\n\n    const globalConfig = await getGlobalInitialProps();\n    const newsList = await getNewsList();\n    return {\n      props: {\n        config: (_globalConfig$config = globalConfig === null || globalConfig === void 0 ? void 0 : globalConfig.config) !== null && _globalConfig$config !== void 0 ? _globalConfig$config : {},\n        menuItems: (_globalConfig$menuIte = globalConfig === null || globalConfig === void 0 ? void 0 : globalConfig.menuItems) !== null && _globalConfig$menuIte !== void 0 ? _globalConfig$menuIte : {},\n        newsList: newsList !== null && newsList !== void 0 ? newsList : []\n      }\n    };\n  } catch (error) {\n    return {\n      props: _objectSpread({}, defaultProps)\n    };\n  }\n}\n\nexport default NewsList;","map":null,"metadata":{},"sourceType":"module"}