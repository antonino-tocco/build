{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport NextApp from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\nimport { ThemeProvider as MaterialThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport store from '../store';\nimport '../style.scss';\n\nconst theme = _objectSpread({\n  primary: '#f2f2f2'\n}, createMuiTheme());\n\nexport default class App extends NextApp {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles && jssStyles.parentNode) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(StyledThemeProvider, {\n      theme: theme\n    }, __jsx(MaterialThemeProvider, {\n      theme: theme\n    }, __jsx(Provider, {\n      store: store\n    }, __jsx(Component, pageProps))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}