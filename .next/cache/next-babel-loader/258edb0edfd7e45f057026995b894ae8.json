{"ast":null,"code":"import _defineProperty from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport { CustomButton } from \"../buttons/buttons\";\nimport * as sectionMenuStyle from './sectionMenu.module.scss';\nimport { Divider, Drawer, IconButton } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { ChevronLeft } from \"@material-ui/icons\";\nimport { allowSectionsMenuMinHeight, isHeightUp } from \"../../helpers/uiHelper\";\nvar drawerWidth = 300;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    toolbar: _objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1)\n    }, theme.mixins.toolbar),\n    drawerPaper: {\n      width: drawerWidth\n    }\n  };\n});\n\nfunction _SectionMenu(_ref) {\n  var _container$clientHeig;\n\n  var drawerOpen = _ref.drawerOpen,\n      sections = _ref.sections,\n      width = _ref.width,\n      toggleDrawer = _ref.toggleDrawer;\n\n  var _goToSection = function _goToSection(item) {\n    window.location.href = \"#\".concat(item === null || item === void 0 ? void 0 : item.id);\n    toggleDrawer(false);\n  };\n\n  var classes = useStyles();\n  var container = window !== undefined ? window.document.body : null;\n  var containerHeight = (_container$clientHeig = container === null || container === void 0 ? void 0 : container.clientHeight) !== null && _container$clientHeig !== void 0 ? _container$clientHeig : 0;\n  return isWidthUp('md', width) && isHeightUp(containerHeight, allowSectionsMenuMinHeight) ? __jsx(\"div\", {\n    className: \"col-lg-3 col-md-3 col-sm-6 d-flex justify-content-center\"\n  }, __jsx(\"div\", {\n    className: sectionMenuStyle['section-menu-container']\n  }, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"row\"\n  }, sections === null || sections === void 0 ? void 0 : sections.map(function (item) {\n    return __jsx(\"div\", {\n      className: \"col-lg-12 col-md-6 col-sm-6 text-center\"\n    }, __jsx(CustomButton, {\n      style: {\n        fontSize: 11,\n        margin: '5px auto'\n      },\n      onClick: function onClick() {\n        return window.location.href = \"#\".concat(item === null || item === void 0 ? void 0 : item.id);\n      }\n    }, item === null || item === void 0 ? void 0 : item.header));\n  }))))) : __jsx(\"div\", null, __jsx(Drawer, {\n    classes: {\n      paper: classes.drawerPaper\n    },\n    container: container,\n    open: drawerOpen,\n    variant: \"persistent\"\n  }, __jsx(\"div\", {\n    className: classes.toolbar\n  }, __jsx(IconButton, {\n    style: {\n      outline: 'none'\n    },\n    onClick: function onClick() {\n      return toggleDrawer(false);\n    }\n  }, __jsx(ChevronLeft, null))), __jsx(Divider, null), __jsx(\"div\", {\n    className: \"row\"\n  }, sections === null || sections === void 0 ? void 0 : sections.map(function (item) {\n    return __jsx(\"div\", {\n      className: \"col-12 text-center\"\n    }, __jsx(CustomButton, {\n      style: {\n        fontSize: 11,\n        margin: '5px auto'\n      },\n      onClick: function onClick() {\n        return _goToSection(item);\n      }\n    }, item === null || item === void 0 ? void 0 : item.header));\n  }))));\n}\n\nvar SectionMenu = withWidth()(_SectionMenu);\nexport { SectionMenu };","map":null,"metadata":{},"sourceType":"module"}