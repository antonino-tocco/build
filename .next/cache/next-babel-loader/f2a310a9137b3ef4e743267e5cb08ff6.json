{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { useRouter } from \"next/router\";\nimport { Typography } from '@material-ui/core';\nimport { checkIfNotEmpty } from \"../../helpers/validatorHelper\";\nimport { CustomButton } from '../buttons/buttons';\nimport pageSectionStyle from './page-section.module.scss';\nimport { getImageUrl } from \"../../helpers/imageHelper\";\nimport { SanitizedHtml } from \"../sanitizedHtml\";\nimport constants from \"../../constants\";\n\nfunction PageSection(_ref) {\n  var _sectionData$fontSize, _sectionData$textAlig, _sectionData$content, _sectionData$rows;\n\n  var sectionData = _ref.sectionData,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'light' : _ref$variant,\n      _ref$asContainer = _ref.asContainer,\n      asContainer = _ref$asContainer === void 0 ? false : _ref$asContainer,\n      openImageCreditsDialog = _ref.openImageCreditsDialog;\n  var router = useRouter();\n\n  var _goToUrl = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!url) {\n                _context.next = 7;\n                break;\n              }\n\n              if (!url.startsWith('http')) {\n                _context.next = 5;\n                break;\n              }\n\n              window.open(url);\n              _context.next = 7;\n              break;\n\n            case 5:\n              _context.next = 7;\n              return router.push(url);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function _goToUrl(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var mainContentTextStyle = {\n    fontSize: (_sectionData$fontSize = sectionData === null || sectionData === void 0 ? void 0 : sectionData.fontSize) !== null && _sectionData$fontSize !== void 0 ? _sectionData$fontSize : constants.SECTIONS.mainContentTextStyle.fontSize,\n    textAlign: (_sectionData$textAlig = sectionData === null || sectionData === void 0 ? void 0 : sectionData.textAlign) !== null && _sectionData$textAlig !== void 0 ? _sectionData$textAlig : constants.SECTIONS.mainContentTextStyle.textAlign\n  };\n  return __jsx(\"section\", {\n    id: sectionData.id,\n    className: \"\".concat(pageSectionStyle['page-section'], \" \").concat(pageSectionStyle[variant])\n  }, __jsx(\"div\", {\n    className: pageSectionStyle['page-section-main-container']\n  }, checkIfNotEmpty(sectionData === null || sectionData === void 0 ? void 0 : sectionData.header) ? __jsx(\"div\", {\n    className: pageSectionStyle['page-section-header']\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    gutterBottom: true,\n    className: pageSectionStyle['page-section-header-label']\n  }, sectionData.header), __jsx(\"div\", {\n    className: pageSectionStyle['page-section-header-divider']\n  })) : null, checkIfNotEmpty(sectionData === null || sectionData === void 0 ? void 0 : sectionData.content) ? __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(SanitizedHtml, {\n    content: (_sectionData$content = sectionData.content) !== null && _sectionData$content !== void 0 ? _sectionData$content : '',\n    style: mainContentTextStyle\n  }))) : null, ((_sectionData$rows = sectionData === null || sectionData === void 0 ? void 0 : sectionData.rows) !== null && _sectionData$rows !== void 0 ? _sectionData$rows : []).map(function (row) {\n    var _row$fontSize, _row$textAlign, _row$columns, _row$columns2, _row$id, _row$columns3;\n\n    var rowContentTextStyle = {\n      fontSize: (_row$fontSize = row === null || row === void 0 ? void 0 : row.fontSize) !== null && _row$fontSize !== void 0 ? _row$fontSize : constants.SECTIONS.rowContentTextStyle.fontSize,\n      textAlign: (_row$textAlign = row === null || row === void 0 ? void 0 : row.textAlign) !== null && _row$textAlign !== void 0 ? _row$textAlign : constants.SECTIONS.mainContentTextStyle.textAlign\n    };\n    var hasColumns = ((_row$columns = row.columns) !== null && _row$columns !== void 0 ? _row$columns : []).length > 0;\n    var colClassName = hasColumns ? \"col-\".concat(Math.ceil(12 / ((_row$columns2 = row.columns) !== null && _row$columns2 !== void 0 ? _row$columns2 : []).length)) : 'col-12';\n    return __jsx(\"div\", {\n      className: asContainer ? 'container' : null,\n      id: (_row$id = row === null || row === void 0 ? void 0 : row.id) !== null && _row$id !== void 0 ? _row$id : ''\n    }, __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginTop: 20\n      }\n    }, __jsx(\"div\", {\n      className: \"col-12\"\n    }, checkIfNotEmpty(row.header) ? __jsx(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      className: pageSectionStyle['page-section-sub-header']\n    }, row.header) : null)), __jsx(\"div\", {\n      className: \"row\",\n      style: {\n        marginTop: 20\n      }\n    }, ((_row$columns3 = row.columns) !== null && _row$columns3 !== void 0 ? _row$columns3 : []).map(function (col) {\n      var _col$content, _col$image$maxWidth, _col$image, _constants$SECTIONS$r, _col$image2, _col$image4;\n\n      return __jsx(\"div\", {\n        className: colClassName\n      }, checkIfNotEmpty(col.content) ? __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-12\"\n      }, __jsx(SanitizedHtml, {\n        content: (_col$content = col === null || col === void 0 ? void 0 : col.content) !== null && _col$content !== void 0 ? _col$content : '',\n        style: rowContentTextStyle\n      }))) : null, !!(col === null || col === void 0 ? void 0 : col.image) ? __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-12 text-center\"\n      }, __jsx(\"div\", {\n        style: {\n          position: 'relative',\n          display: 'inline-block'\n        }\n      }, __jsx(\"img\", {\n        src: getImageUrl(col === null || col === void 0 ? void 0 : col.image),\n        style: {\n          maxWidth: (_col$image$maxWidth = col === null || col === void 0 ? void 0 : (_col$image = col.image) === null || _col$image === void 0 ? void 0 : _col$image.maxWidth) !== null && _col$image$maxWidth !== void 0 ? _col$image$maxWidth : (_constants$SECTIONS$r = constants.SECTIONS.rowContentImageStyle) === null || _constants$SECTIONS$r === void 0 ? void 0 : _constants$SECTIONS$r.maxWidth,\n          width: '100%'\n        }\n      }), !!(col === null || col === void 0 ? void 0 : (_col$image2 = col.image) === null || _col$image2 === void 0 ? void 0 : _col$image2.imageCreditsLabel) ? __jsx(\"div\", {\n        className: pageSectionStyle['page-section-col-image-credits-label'],\n        onClick: function onClick() {\n          var _col$image3;\n\n          return openImageCreditsDialog(col === null || col === void 0 ? void 0 : (_col$image3 = col.image) === null || _col$image3 === void 0 ? void 0 : _col$image3.imageCreditsContent);\n        }\n      }, __jsx(\"span\", null, col === null || col === void 0 ? void 0 : (_col$image4 = col.image) === null || _col$image4 === void 0 ? void 0 : _col$image4.imageCreditsLabel)) : null))) : null);\n    }), !!row.cta ? __jsx(\"div\", {\n      className: \"col-12 text-center\",\n      style: {\n        marginTop: 40\n      }\n    }, __jsx(CustomButton, {\n      onClick: function onClick() {\n        var _row$cta;\n\n        return _goToUrl(row === null || row === void 0 ? void 0 : (_row$cta = row.cta) === null || _row$cta === void 0 ? void 0 : _row$cta.url);\n      },\n      variant: \"primary\",\n      style: {\n        margin: '0 auto',\n        fontSize: 16\n      },\n      isCta: true\n    }, row.cta.label)) : null));\n  })));\n}\n\nexport default PageSection;","map":null,"metadata":{},"sourceType":"module"}