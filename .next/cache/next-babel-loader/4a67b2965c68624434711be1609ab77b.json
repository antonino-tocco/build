{"ast":null,"code":"import _defineProperty from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _storedTOS$agree;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport tosConstants from \"../constants/tos.constants\";\nimport { LocalStorageHelper } from \"../helpers/storageHelper\";\nimport constants from \"../constants\";\n\nvar _storedTOS = LocalStorageHelper.get(constants.HFH_TOS);\n\nvar _defaultInitialState = {\n  agree: (_storedTOS$agree = _storedTOS === null || _storedTOS === void 0 ? void 0 : _storedTOS.agree) !== null && _storedTOS$agree !== void 0 ? _storedTOS$agree : false\n};\n\nvar _storeTOS = function _storeTOS(data) {\n  if (!!data) {\n    var newData = {\n      agree: false\n    };\n\n    if (!!data.agree) {\n      newData.agree = data.agree;\n    }\n\n    LocalStorageHelper.save(constants.HFH_TOS, newData);\n  }\n};\n\nexport function tos() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _defaultInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case tosConstants.AGREE_TOS:\n      var newData = _objectSpread(_objectSpread({}, initialState), {}, {\n        action: action.type,\n        agree: true\n      });\n\n      _storeTOS(newData);\n\n      return newData;\n\n    default:\n      return initialState;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}