{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { login, verifyToken } from \"../helpers/apiHelper\";\nimport authConstants from \"../constants/auth.constants\";\n\nfunction _login(username, password) {\n  function request() {\n    return {\n      type: authConstants.LOGIN_REQUEST\n    };\n  }\n\n  function success() {\n    return {\n      type: authConstants.LOGIN_SUCCESS,\n      isLogged: true\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: authConstants.LOGIN_ERROR,\n      error: error,\n      isLogged: false\n    };\n  }\n\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(request());\n              _context.next = 3;\n              return login(username, password);\n\n            case 3:\n              result = _context.sent;\n\n              if (!result.success) {\n                _context.next = 7;\n                break;\n              }\n\n              dispatch(success());\n              return _context.abrupt(\"return\");\n\n            case 7:\n              dispatch(failure(result.error));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\n\nfunction _verifyToken(token) {\n  function request() {\n    return {\n      type: authConstants.VERIFY_TOKEN_REQUEST\n    };\n  }\n\n  function success() {\n    return {\n      type: authConstants.VERIFY_TOKEN_SUCCESS,\n      isLogged: true\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: authConstants.VERIFY_TOKEN_ERROR,\n      error: error,\n      isLogged: false\n    };\n  }\n\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(request());\n              _context2.next = 3;\n              return verifyToken(token);\n\n            case 3:\n              result = _context2.sent;\n\n              if (!result.success) {\n                _context2.next = 7;\n                break;\n              }\n\n              dispatch(success());\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              dispatch(failure(result.error));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\n\nexport { _login as login, _verifyToken as verifyToken };","map":null,"metadata":{},"sourceType":"module"}