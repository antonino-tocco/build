{"ast":null,"code":"import _defineProperty from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport { connect } from 'react-redux';\nimport { useEffect } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { getPage } from \"../../helpers/dataHelper\";\nimport Spinner from \"../../components/spinner/spinner\";\nimport PageContainer from \"../../components/page/pageContainer\";\nimport { CustomButton } from \"../../components/buttons/buttons\";\nimport { downloadAllModels, downloadModels, getFilters, searchModels } from \"../../helpers/apiHelper\";\nimport constants from \"../../constants\";\nimport pageContentStyle from '../page.module.scss';\nimport { ItemsCountBaloon } from \"../../components/baloons/itemsCountBaloon\";\nimport { ModelCard } from \"../../components/cards/modelCard\";\nimport { FormFilter } from \"../../components/forms/filter\";\nimport { CloudDownload as IconDownload } from \"@material-ui/icons\";\nimport { hashCode } from \"../../helpers/hashHelper\";\nimport { HodgkinHuxleyBaloon } from \"../../components/hodgkin-huxley-baloon\";\nimport { addModFile, removeElectrophysiology, removeModFile, setMorphology, clear } from \"../../actions/hodgkinHuxley.actions\";\n\nvar _ModelsPage = function _ModelsPage(props) {\n  var _page$variant;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      page = _React$useState4[0],\n      setPage = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      models = _React$useState6[0],\n      setModels = _React$useState6[1];\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      filters = _React$useState8[0],\n      setFilters = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      selectedFilters = _React$useState10[0],\n      setSelectedFilters = _React$useState10[1];\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      selectedQuery = _React$useState12[0],\n      setSelectedQuery = _React$useState12[1];\n\n  var _React$useState13 = React.useState([]),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      selectedForDownloads = _React$useState14[0],\n      setSelectedForDownloads = _React$useState14[1];\n\n  var _React$useState15 = React.useState(0),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      numPage = _React$useState16[0],\n      setNumPage = _React$useState16[1];\n\n  var _React$useState17 = React.useState(1),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      totalPages = _React$useState18[0],\n      setTotalPages = _React$useState18[1];\n\n  var _React$useState19 = React.useState(0),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      totalItems = _React$useState20[0],\n      setTotalItems = _React$useState20[1];\n\n  var _React$useState21 = React.useState(constants.DEFAULT_HITS_PER_PAGE),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      hitsPerPage = _React$useState22[0],\n      setHitsPerPage = _React$useState22[1];\n\n  var selectedMorphologyForBuilding = props.selectedMorphologyForBuilding,\n      selectedElectrophysiologiesForBuilding = props.selectedElectrophysiologiesForBuilding,\n      selectedModFilesForBuilding = props.selectedModFilesForBuilding,\n      setMorphologyForBuilding = props.setMorphologyForBuilding,\n      removeElectrophysiologyForBuilding = props.removeElectrophysiologyForBuilding,\n      addModFileForBuilding = props.addModFileForBuilding,\n      removeModFileForBuilding = props.removeModFileForBuilding,\n      clearHodgkinHuxley = props.clearHodgkinHuxley;\n  useEffect(function () {\n    setup();\n  }, []);\n\n  var setup = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _filters, _page, _yield$searchModels, _totalPages, _totalItems, items;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getFilters({\n                indexName: 'model'\n              });\n\n            case 3:\n              _filters = _context.sent;\n              _context.next = 6;\n              return getPage('models');\n\n            case 6:\n              _page = _context.sent;\n              _context.next = 9;\n              return searchModels({\n                query: selectedQuery,\n                page: numPage\n              });\n\n            case 9:\n              _yield$searchModels = _context.sent;\n              _totalPages = _yield$searchModels.total_page;\n              _totalItems = _yield$searchModels.total;\n              items = _yield$searchModels.items;\n              setPage(_page);\n              setFilters(_filters);\n              setTotalPages(_totalPages);\n              setTotalItems(_totalItems);\n              setModels(items);\n              setLoading(false);\n              _context.next = 23;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 21]]);\n    }));\n\n    return function setup() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _search = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _ref3,\n          query,\n          filters,\n          hitsPerPage,\n          page,\n          _filters,\n          _yield$searchModels2,\n          _totalPages,\n          _totalItems,\n          items,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref3 = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, query = _ref3.query, filters = _ref3.filters, hitsPerPage = _ref3.hitsPerPage;\n              console.log('@@@@requestSearch');\n              page = 0;\n              setNumPage(0);\n              setLoading(true);\n              _filters = filters !== undefined ? filters : selectedFilters;\n              _context2.next = 8;\n              return searchModels({\n                query: query !== null && query !== void 0 ? query : selectedQuery,\n                filters: _filters,\n                page: page,\n                hitsPerPage: hitsPerPage\n              });\n\n            case 8:\n              _yield$searchModels2 = _context2.sent;\n              _totalPages = _yield$searchModels2.total_page;\n              _totalItems = _yield$searchModels2.total;\n              items = _yield$searchModels2.items;\n              setModels(items);\n              setTotalPages(_totalPages);\n              setTotalItems(_totalItems);\n              setLoading(false);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function _search() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _loadMore = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var page, _yield$searchModels3, _totalPages, _totalItems, items, allDataSets;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              page = numPage + 1;\n              setNumPage(page);\n              setLoading(true);\n              _context3.next = 5;\n              return searchModels({\n                query: selectedQuery,\n                filters: selectedFilters,\n                page: page\n              });\n\n            case 5:\n              _yield$searchModels3 = _context3.sent;\n              _totalPages = _yield$searchModels3.total_page;\n              _totalItems = _yield$searchModels3.total;\n              items = _yield$searchModels3.items;\n              allDataSets = [].concat(_toConsumableArray(models), _toConsumableArray(items));\n              setModels(allDataSets);\n              setTotalItems(_totalItems);\n              setTotalPages(_totalPages);\n              setLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function _loadMore() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var _onHitsPerPageChange = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(value) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setHitsPerPage(value);\n              _context4.next = 3;\n              return _search({\n                hitsPerPage: value\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function _onHitsPerPageChange(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var _onChangeQuery = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(query) {\n      var _query$trim;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setSelectedQuery(query);\n\n              if (!((query === null || query === void 0 ? void 0 : (_query$trim = query.trim()) === null || _query$trim === void 0 ? void 0 : _query$trim.length) < constants.MIN_SEARCH_LENGTH)) {\n                _context5.next = 4;\n                break;\n              }\n\n              _context5.next = 4;\n              return _search({\n                query: query\n              });\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function _onChangeQuery(_x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var _applyFilters = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _search();\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function _applyFilters() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var _resetFilters = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              setSelectedFilters(null);\n              _context7.next = 3;\n              return _search({\n                query: '',\n                filters: null\n              });\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function _resetFilters() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var _downloadAll = function _downloadAll() {\n    window.open(downloadAllModels());\n  };\n\n  var _downloadSelectedDatasets = function _downloadSelectedDatasets() {\n    window.open(downloadModels(selectedForDownloads));\n  };\n\n  var _toggleSelectForDownload = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(id, selected) {\n      var newValues, _newValues, elIndex;\n\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              console.log('@@@@@@@toggleSelectForDownload', id, selected);\n\n              if (selected) {\n                newValues = _toConsumableArray(selectedForDownloads);\n                newValues.push(id);\n                setSelectedForDownloads(newValues);\n              } else {\n                _newValues = _toConsumableArray(selectedForDownloads);\n                elIndex = _newValues.indexOf(id);\n\n                if (elIndex > -1) {\n                  _newValues.splice(elIndex, 1);\n\n                  setSelectedForDownloads(_newValues);\n                }\n              }\n\n            case 2:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function _toggleSelectForDownload(_x3, _x4) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var _toggleModFileForBuilding = function _toggleModFileForBuilding(item, checked) {\n    if (!!checked) {\n      addModFileForBuilding(item);\n    } else {\n      removeModFileForBuilding(item);\n    }\n  };\n\n  var _isModFileSelected = function _isModFileSelected(item) {\n    var _modFiles = _toConsumableArray(selectedModFilesForBuilding !== null && selectedModFilesForBuilding !== void 0 ? selectedModFilesForBuilding : []);\n\n    var index = _modFiles.findIndex(function (value) {\n      return hashCode(JSON.stringify(item)) == hashCode(JSON.stringify(value));\n    });\n\n    return index > -1;\n  };\n\n  var hasMoreItems = numPage < totalPages - 1;\n  var hasData = !!models && models.length > 0;\n  var countBaloonClassName = !!selectedForDownloads && !!selectedForDownloads && selectedForDownloads.length > 0 ? 'col-md-6' : 'col-md-8';\n  var downloadBlockClassName = !!selectedForDownloads && !!selectedForDownloads && selectedForDownloads.length > 0 ? 'col-md-6' : 'col-md-4';\n  var pageVariant = (_page$variant = page === null || page === void 0 ? void 0 : page.variant) !== null && _page$variant !== void 0 ? _page$variant : 'dark';\n  return __jsx(PageContainer, {\n    variant: pageVariant,\n    mainClassName: 'with-fixed-header',\n    fixedHeader: true\n  }, __jsx(\"div\", {\n    className: \"container \".concat(pageContentStyle['page-container'])\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    className: \"\".concat(pageContentStyle['page-header-label'], \" text-center\")\n  }, page.title), __jsx(\"div\", {\n    className: pageContentStyle['page-header-divider']\n  }))), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, page.content)), __jsx(\"section\", null, __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      marginTop: 20\n    }\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(FormFilter, {\n    variant: pageVariant,\n    query: selectedQuery,\n    filters: filters,\n    selectedFilters: selectedFilters,\n    selectedHitsPerPage: hitsPerPage,\n    onQueryChange: function onQueryChange(value) {\n      return _onChangeQuery(value);\n    },\n    onRequestSearch: function onRequestSearch() {\n      return _search();\n    },\n    onChangeHitsPerPage: function onChangeHitsPerPage(value) {\n      return _onHitsPerPageChange(value);\n    },\n    onChangeFilters: function onChangeFilters(key, value) {\n      return setSelectedFilters(_objectSpread(_objectSpread({}, selectedFilters), {}, _defineProperty({}, key, value)));\n    },\n    applyFilters: function applyFilters() {\n      return _applyFilters();\n    },\n    resetFilters: function resetFilters() {\n      return _resetFilters();\n    }\n  }))), __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      marginTop: 20\n    }\n  }, __jsx(\"div\", {\n    className: \"\".concat(countBaloonClassName)\n  }, __jsx(ItemsCountBaloon, {\n    label: \"Total items\",\n    count: totalItems\n  })), __jsx(\"div\", {\n    className: \"\".concat(downloadBlockClassName, \" text-right\")\n  }, !!selectedForDownloads && selectedForDownloads.length > 0 ? __jsx(CustomButton, {\n    onClick: function onClick() {\n      return _downloadSelectedDatasets();\n    },\n    style: {\n      marginLeft: 10\n    }\n  }, __jsx(IconDownload, null), \" \", __jsx(\"span\", {\n    style: {\n      marginLeft: 5\n    }\n  }, \"Download Selected\")) : null)), __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      marginTop: 20\n    }\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(HodgkinHuxleyBaloon, {\n    variant: pageVariant,\n    morphology: selectedMorphologyForBuilding,\n    electrophysiologies: selectedElectrophysiologiesForBuilding,\n    modFiles: selectedModFilesForBuilding,\n    removeMorphology: function removeMorphology() {\n      return setMorphologyForBuilding(null);\n    },\n    removeElectrophysiology: function removeElectrophysiology(item) {\n      return removeElectrophysiologyForBuilding(item);\n    },\n    removeModFile: function removeModFile(item) {\n      return removeModFileForBuilding(item);\n    },\n    clear: function clear() {\n      return clearHodgkinHuxley();\n    }\n  }))), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-12 text-center\"\n  }, !hasData ? __jsx(\"p\", null, loading ? '' : 'There are not data for search criteria') : __jsx(\"div\", null, (models !== null && models !== void 0 ? models : []).map(function (item) {\n    return __jsx(\"div\", {\n      className: \"row\",\n      key: \"row-dataset-\".concat(item === null || item === void 0 ? void 0 : item.id)\n    }, __jsx(\"div\", {\n      className: \"col-12\"\n    }, __jsx(ModelCard, {\n      model: item,\n      selectedForDownload: selectedForDownloads.includes(item['source_id']),\n      toggleSelectedForDownload: _toggleSelectForDownload,\n      toggleModFileForBuilding: _toggleModFileForBuilding,\n      isModFileSelected: _isModFileSelected\n    })));\n  })))), hasMoreItems ? __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      marginTop: 20\n    }\n  }, __jsx(\"div\", {\n    className: \"col-12 text-center\"\n  }, __jsx(CustomButton, {\n    variant: \"primary\",\n    style: {\n      margin: '0 auto'\n    },\n    onClick: function onClick() {\n      return _loadMore();\n    }\n  }, \"Load More\"))) : null), loading ? __jsx(Spinner, null) : null));\n};\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var _state$hodgkinHuxley$, _state$hodgkinHuxley, _state$hodgkinHuxley$2, _state$hodgkinHuxley2, _state$hodgkinHuxley$3, _state$hodgkinHuxley3;\n\n  return {\n    selectedMorphologyForBuilding: (_state$hodgkinHuxley$ = state === null || state === void 0 ? void 0 : (_state$hodgkinHuxley = state.hodgkinHuxley) === null || _state$hodgkinHuxley === void 0 ? void 0 : _state$hodgkinHuxley.morphology) !== null && _state$hodgkinHuxley$ !== void 0 ? _state$hodgkinHuxley$ : null,\n    selectedElectrophysiologiesForBuilding: (_state$hodgkinHuxley$2 = state === null || state === void 0 ? void 0 : (_state$hodgkinHuxley2 = state.hodgkinHuxley) === null || _state$hodgkinHuxley2 === void 0 ? void 0 : _state$hodgkinHuxley2.electrophysiologies) !== null && _state$hodgkinHuxley$2 !== void 0 ? _state$hodgkinHuxley$2 : null,\n    selectedModFilesForBuilding: (_state$hodgkinHuxley$3 = state === null || state === void 0 ? void 0 : (_state$hodgkinHuxley3 = state.hodgkinHuxley) === null || _state$hodgkinHuxley3 === void 0 ? void 0 : _state$hodgkinHuxley3.modFiles) !== null && _state$hodgkinHuxley$3 !== void 0 ? _state$hodgkinHuxley$3 : []\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setMorphologyForBuilding: function setMorphologyForBuilding(item) {\n      return dispatch(setMorphology(item));\n    },\n    removeElectrophysiologyForBuilding: function removeElectrophysiologyForBuilding(item) {\n      return dispatch(removeElectrophysiology(item));\n    },\n    addModFileForBuilding: function addModFileForBuilding(item) {\n      return dispatch(addModFile(item));\n    },\n    removeModFileForBuilding: function removeModFileForBuilding(item) {\n      return dispatch(removeModFile(item));\n    },\n    clearHodgkinHuxley: function clearHodgkinHuxley() {\n      return dispatch(clear());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(_ModelsPage);","map":null,"metadata":{},"sourceType":"module"}