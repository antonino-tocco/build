{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { AppBar, Toolbar, Link, List, ListItem, makeStyles, Typography, IconButton } from \"@material-ui/core\";\nimport { Menu as IconMenu } from '@material-ui/icons';\nimport { getPageUrl } from \"../../helpers/postHelper\";\nimport { useRouter } from \"next/router\";\nimport menuStyle from './menu.module.scss';\nimport { useEffect, useState } from \"react\";\nimport { MenuItemType } from \"../../data\";\nimport { getImageUrl } from \"../../helpers/imageHelper\";\nimport { sortedArray } from \"../../helpers/arrayHelper\";\nimport constants from \"../../constants\";\n\nvar getBackgroundColor = function getBackgroundColor() {\n  var _window;\n\n  return ((_window = window) === null || _window === void 0 ? void 0 : _window.pageYOffset) > 60 ? '#393745' : 'transparent';\n};\n\nvar useToolbarStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      background: 'transparent'\n    }\n  };\n});\nvar useFixedToolbarStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      background: '#393745'\n    }\n  };\n});\nvar useNavStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: '0 1rem'\n    }\n  };\n});\nvar useListStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      padding: 0\n    }\n  };\n});\n\nvar MenuItem = function MenuItem(_ref) {\n  var _item$menuitems$lengt, _item$menuitems;\n\n  var item = _ref.item,\n      _ref$isSubMenuItem = _ref.isSubMenuItem,\n      isSubMenuItem = _ref$isSubMenuItem === void 0 ? false : _ref$isSubMenuItem;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      expanded = _useState[0],\n      setExpanded = _useState[1];\n\n  var buildSubMenu = function buildSubMenu(item, expanded) {\n    var _sortedArray;\n\n    return __jsx(\"div\", {\n      className: \"dropdown-menu \".concat(menuStyle['custom-dropdown-menu'], \" \").concat(expanded ? 'show' : ''),\n      \"aria-labelledby\": \"navbarDropdownMenuLink\",\n      key: \"sub-menu-dropdown-\".concat(item.id)\n    }, __jsx(\"ul\", {\n      className: menuStyle['custom-dropdown-menu-list']\n    }, (_sortedArray = sortedArray(item.menuitems, 'title')) === null || _sortedArray === void 0 ? void 0 : _sortedArray.map(function (subItem) {\n      return __jsx(MenuItem, {\n        key: \"sub-menu-item-\".concat(subItem.id),\n        item: subItem,\n        isSubMenuItem: true\n      });\n    })));\n  };\n\n  var showDropDown = function showDropDown() {\n    setExpanded(true);\n  };\n\n  var hideDropDown = function hideDropDown() {\n    setExpanded(false);\n  };\n\n  var toggleDropDown = function toggleDropDown() {\n    setExpanded(!expanded);\n  };\n\n  var linkUrl = getPageUrl(item);\n  var isActiveLink = linkUrl === \"\".concat(constants.BASE_URL).concat(router === null || router === void 0 ? void 0 : router.asPath);\n  var isDropDown = item.type === MenuItemType.section || ((_item$menuitems$lengt = (_item$menuitems = item.menuitems) === null || _item$menuitems === void 0 ? void 0 : _item$menuitems.length) !== null && _item$menuitems$lengt !== void 0 ? _item$menuitems$lengt : 0) > 0;\n  return __jsx(ListItem, {\n    onMouseEnter: isDropDown ? function () {\n      return showDropDown();\n    } : null,\n    onMouseLeave: isDropDown ? function () {\n      return hideDropDown();\n    } : null,\n    className: \"\".concat(isSubMenuItem ? menuStyle['sub-list-item'] : menuStyle['list-item'], \" \").concat(isActiveLink ? menuStyle['active'] : '', \" \").concat(isDropDown ? 'dropdown' : '')\n  }, __jsx(Link, {\n    className: menuStyle['link'],\n    href: linkUrl\n  }, item.title), isDropDown ? buildSubMenu(item, expanded) : null);\n};\n\nvar Menu = function Menu(_ref2) {\n  var _sortedArray2;\n\n  var logo = _ref2.logo,\n      projectHeader = _ref2.projectHeader,\n      institutionHeader = _ref2.institutionHeader,\n      institutionLogo = _ref2.institutionLogo,\n      institutionUrl = _ref2.institutionUrl,\n      menuItems = _ref2.menuItems,\n      _ref2$isSubMenuItem = _ref2.isSubMenuItem,\n      isSubMenuItem = _ref2$isSubMenuItem === void 0 ? false : _ref2$isSubMenuItem,\n      _ref2$fixed = _ref2.fixed,\n      fixed = _ref2$fixed === void 0 ? false : _ref2$fixed,\n      _ref2$transparent = _ref2.transparent,\n      transparent = _ref2$transparent === void 0 ? false : _ref2$transparent,\n      _ref2$showDrawerToggl = _ref2.showDrawerToggleButton,\n      showDrawerToggleButton = _ref2$showDrawerToggl === void 0 ? false : _ref2$showDrawerToggl,\n      _ref2$handleOpenDrawe = _ref2.handleOpenDrawer,\n      handleOpenDrawer = _ref2$handleOpenDrawe === void 0 ? function (open) {\n    return null;\n  } : _ref2$handleOpenDrawe;\n  var router = useRouter();\n\n  var _useState2 = useState(false),\n      scrolled = _useState2[0],\n      setScrolled = _useState2[1];\n\n  var _useState3 = useState(false),\n      menuExpanded = _useState3[0],\n      setMenuExpanded = _useState3[1];\n\n  var toolbarClasses = !fixed || scrolled ? useFixedToolbarStyles() : useToolbarStyles();\n  var navClasses = useNavStyles();\n  var listClasses = useListStyles();\n\n  var buildMenuItem = function buildMenuItem(item) {\n    return __jsx(MenuItem, {\n      item: item,\n      key: \"menu-item-\".concat(item.id)\n    });\n  };\n\n  var toggleMenu = function toggleMenu() {\n    setMenuExpanded(!menuExpanded);\n  };\n\n  var _listenForScroll = function _listenForScroll() {\n    if (!!window) {\n      window.addEventListener('scroll', _onScrollTrigger);\n    }\n  };\n\n  var _onScrollTrigger = function _onScrollTrigger() {\n    var _window$pageYOffset, _window2;\n\n    setScrolled(((_window$pageYOffset = (_window2 = window) === null || _window2 === void 0 ? void 0 : _window2.pageYOffset) !== null && _window$pageYOffset !== void 0 ? _window$pageYOffset : 0) > 60);\n  };\n\n  useEffect(function () {\n    _listenForScroll();\n\n    return function () {\n      window.removeEventListener('scroll', _onScrollTrigger);\n    };\n  }, []);\n  var appBarClasses = \"\".concat(fixed ? menuStyle['fixed-header'] : menuStyle['default-header'], \" \").concat(fixed && transparent && !scrolled ? menuStyle['transparent'] : '');\n  var hasInstitutionLogo = !!institutionLogo;\n  var hasInstitutionUrl = !!institutionUrl;\n  return __jsx(AppBar, {\n    position: \"relative\",\n    className: appBarClasses\n  }, __jsx(Toolbar, {\n    className: menuStyle['custom-menu-toolbar']\n  }, __jsx(\"nav\", {\n    className: \"navbar navbar-dark navbar-expand-lg \".concat(menuStyle['menu-navbar'])\n  }, __jsx(\"div\", {\n    className: \"container-fluid\"\n  }, showDrawerToggleButton ? __jsx(IconButton, {\n    style: {\n      marginRight: 10,\n      outline: 'none'\n    },\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: function onClick() {\n      return handleOpenDrawer(true);\n    },\n    edge: \"start\"\n  }, __jsx(IconMenu, null)) : null, hasInstitutionLogo && hasInstitutionUrl ? __jsx(\"a\", {\n    className: \"navbar-brand \".concat(menuStyle['custom-navbar-brand']),\n    href: institutionUrl,\n    target: \"_blank\"\n  }, __jsx(\"div\", {\n    className: menuStyle['custom-navbar-logo-container']\n  }, __jsx(\"img\", {\n    src: getImageUrl(institutionLogo),\n    className: menuStyle['custom-navbar-logo']\n  }))) : __jsx(\"div\", null, hasInstitutionLogo ? __jsx(\"div\", {\n    className: menuStyle['custom-navbar-logo-container']\n  }, __jsx(\"img\", {\n    src: getImageUrl(institutionLogo)\n  })) : null), projectHeader ? __jsx(\"a\", {\n    className: \"navbar-brand \".concat(menuStyle['custom-navbar-brand']),\n    href: getPageUrl('/'),\n    style: {\n      marginRight: 20\n    }\n  }, __jsx(Typography, {\n    variant: \"h1\",\n    className: menuStyle['header-project-label']\n  }, projectHeader)) : null, __jsx(\"button\", {\n    className: \"navbar-toggler \".concat(menuStyle['custom-navbar-toggler']),\n    type: \"button\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#navbarNav\",\n    \"aria-controls\": \"navbarNav\",\n    \"aria-expanded\": \"false\",\n    \"aria-label\": \"Toggle navigation\"\n  }, __jsx(\"span\", {\n    className: \"navbar-toggler-icon\",\n    onClick: function onClick() {\n      return toggleMenu();\n    }\n  })), __jsx(\"div\", {\n    className: \"collapse navbar-collapse \".concat(menuExpanded ? 'show' : ''),\n    id: \"navbarNav\"\n  }, __jsx(List, {\n    className: \"navbar-nav ml-auto\",\n    classes: listClasses\n  }, (_sortedArray2 = sortedArray(menuItems, 'order')) === null || _sortedArray2 === void 0 ? void 0 : _sortedArray2.map(function (item) {\n    return buildMenuItem(item);\n  })))))));\n};\n\nexport default Menu;","map":null,"metadata":{},"sourceType":"module"}