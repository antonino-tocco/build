{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { Form, Input, Button, Select } from 'antd';\nimport { GatewayOutlined, UserOutlined, CloseOutlined } from '@ant-design/icons';\nimport { feedbackUrl, deploymentUrl } from '../../config';\nimport styles from './styles.module.scss';\nvar TextArea = Input.TextArea;\nvar Option = Select.Option;\nvar FEEDBACK_CONTACT_KEY = 'feedbackContact';\nvar storage = true ? window.sessionStorage : null;\n\nvar Feedback = function Feedback() {\n  var _storage$getItem;\n\n  var router = useRouter();\n\n  var _useState = useState(false),\n      formVisible = _useState[0],\n      setFormVisible = _useState[1];\n\n  var issueSelectRef = useRef(null);\n\n  var _useState2 = useState(null),\n      type = _useState2[0],\n      setType = _useState2[1];\n\n  var _useState3 = useState(''),\n      component = _useState3[0],\n      setComponent = _useState3[1];\n\n  var _useState4 = useState(''),\n      details = _useState4[0],\n      setDetails = _useState4[1];\n\n  var _useState5 = useState((_storage$getItem = storage === null || storage === void 0 ? void 0 : storage.getItem(FEEDBACK_CONTACT_KEY)) !== null && _storage$getItem !== void 0 ? _storage$getItem : ''),\n      contact = _useState5[0],\n      setContact = _useState5[1];\n\n  var _useState6 = useState(false),\n      sending = _useState6[0],\n      setSending = _useState6[1];\n\n  var _useState7 = useState(null),\n      responseStatus = _useState7[0],\n      setResponseStatus = _useState7[1];\n\n  var onContactChange = function onContactChange(value) {\n    storage === null || storage === void 0 ? void 0 : storage.setItem(FEEDBACK_CONTACT_KEY, value);\n    setContact(value);\n  };\n\n  var showForm = function showForm() {\n    var _issueSelectRef$curre;\n\n    setFormVisible(true);\n    issueSelectRef === null || issueSelectRef === void 0 ? void 0 : (_issueSelectRef$curre = issueSelectRef.current) === null || _issueSelectRef$curre === void 0 ? void 0 : _issueSelectRef$curre.focus();\n  };\n\n  var closeForm = function closeForm() {\n    setFormVisible(false);\n    setTimeout(function () {\n      setType(null);\n      setComponent('');\n      setDetails('');\n      setResponseStatus(null);\n    }, 200);\n  };\n\n  var sendFeedback = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var pageUrl, labels, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setResponseStatus(null);\n              setSending(true);\n              pageUrl = \"\".concat(deploymentUrl).concat(router.basePath).concat(router.asPath);\n              labels = ['triage'];\n\n              if (router.basePath.startsWith('/model')) {\n                labels.push('section: explore');\n              } else if (router.basePath.startsWith('/build')) {\n                labels.push('section: build');\n              }\n\n              _context.prev = 5;\n              _context.next = 8;\n              return fetch(\"\".concat(feedbackUrl, \"/hippocampushub/hh-feedback\"), {\n                method: 'POST',\n                body: JSON.stringify({\n                  labels: labels,\n                  title: details.slice(0, 100),\n                  body: [\"Field | Element\", \"--- | ---\", \"Issue type | \".concat(type || '--'), \"Page URL | [\".concat(router.asPath, \"](\").concat(pageUrl, \")\"), \"Component | \".concat(component || '--'), \"Contact | \".concat(contact || '--'), \"\", \"\".concat(details.slice(100))].join('\\n')\n                }),\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 8:\n              res = _context.sent;\n\n              if (res.ok) {\n                setResponseStatus('success');\n                setTimeout(closeForm, 1000);\n              } else setResponseStatus('error');\n\n              setSending(false);\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](5);\n              setResponseStatus('error');\n\n            case 16:\n              _context.prev = 16;\n              setSending(false);\n              return _context.finish(16);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 13, 16, 19]]);\n    }));\n\n    return function sendFeedback() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"\".concat(formVisible ? styles.formVisible : '')\n  }, __jsx(\"div\", {\n    className: styles.feedbackButton,\n    onClick: showForm\n  }, \"Feedback\"), __jsx(\"div\", {\n    id: \"feedbackForm\",\n    className: styles.form\n  }, __jsx(\"div\", {\n    className: styles.closeBtn\n  }, __jsx(Button, {\n    shape: \"circle\",\n    type: \"primary\",\n    danger: true,\n    icon: __jsx(CloseOutlined, null),\n    onClick: closeForm\n  })), __jsx(Form, {\n    size: \"small\",\n    onSubmitCapture: sendFeedback\n  }, __jsx(Form.Item, null, __jsx(Select, {\n    placeholder: \"Feedback type (optional)\",\n    ref: issueSelectRef,\n    disabled: sending,\n    getPopupContainer: function getPopupContainer() {\n      return document.getElementById('feedbackForm');\n    },\n    value: type,\n    onChange: function onChange(value) {\n      return setType(value);\n    }\n  }, __jsx(Option, {\n    value: \"content\"\n  }, \"Content\"), __jsx(Option, {\n    value: \"layout\"\n  }, \"Layout, UI\"), __jsx(Option, {\n    value: \"navigation\"\n  }, \"Navigation, UX\"))), __jsx(Form.Item, null, __jsx(Input, {\n    placeholder: \"Component / page section (optional)\",\n    prefix: __jsx(GatewayOutlined, null),\n    disabled: sending,\n    value: component,\n    onChange: function onChange(e) {\n      return setComponent(e.target.value);\n    }\n  })), __jsx(Form.Item, null, __jsx(TextArea, {\n    placeholder: \"Tell us about your experience...\",\n    rows: 4,\n    disabled: sending,\n    autoSize: {\n      minRows: 4,\n      maxRows: 4\n    },\n    value: details,\n    onChange: function onChange(e) {\n      return setDetails(e.target.value);\n    }\n  })), __jsx(Form.Item, null, __jsx(Input, {\n    placeholder: \"Contact name / email (optional)\",\n    prefix: __jsx(UserOutlined, null),\n    disabled: sending,\n    value: contact,\n    onChange: function onChange(e) {\n      return onContactChange(e.target.value);\n    },\n    onPressEnter: sendFeedback\n  })), __jsx(Form.Item, {\n    className: \"text-right mb-0\"\n  }, responseStatus === 'success' && __jsx(\"span\", {\n    className: \"mr-1\"\n  }, \"Sent, thank you!\"), responseStatus === 'error' && __jsx(\"span\", {\n    className: \"mr-1 text-red\"\n  }, \"Oops, something went wrong\"), __jsx(Button, {\n    className: styles.sendBtn,\n    type: \"primary\",\n    danger: true,\n    disabled: !details || responseStatus === 'success',\n    loading: sending,\n    onClick: sendFeedback\n  }, sending ? 'Sending' : 'Send')))));\n};\n\nexport default Feedback;","map":null,"metadata":{},"sourceType":"module"}