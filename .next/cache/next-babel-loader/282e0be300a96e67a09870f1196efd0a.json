{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from \"react\";\nimport { Card, CardContent, makeStyles, Typography } from \"@material-ui/core\";\nimport * as contentCard from './contentCard.module.scss';\nimport { useRouter } from \"next/router\";\nimport { SanitizedHtml } from \"../sanitizedHtml\";\nimport { CustomButton } from \"../buttons/buttons\";\nconst useContentCardStyles = makeStyles(theme => ({\n  root: {\n    borderRadius: 5,\n    boxShadow: '0px 0px 15px rgba(0, 0, 0, 0.15)'\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: '0 20px'\n  },\n  mainContent: {\n    flexGrow: 1\n  },\n  title: {\n    color: '#fff',\n    fontFamily: 'Titillium Web, sans-serif',\n    fontSize: '24px',\n    textTransform: 'uppercase'\n  }\n}));\n\nconst ContentCard = ({\n  title,\n  content,\n  actions,\n  variant = 'dark'\n}) => {\n  const classes = useContentCardStyles();\n  const router = useRouter();\n  const textColor = variant === 'dark' ? '#fff' : '#333';\n\n  const _goToLink = action => {\n    var _action$url, _url$trim;\n\n    const url = (_action$url = action === null || action === void 0 ? void 0 : action.url) !== null && _action$url !== void 0 ? _action$url : null;\n\n    if (!!url && (url === null || url === void 0 ? void 0 : (_url$trim = url.trim()) === null || _url$trim === void 0 ? void 0 : _url$trim.length) > 0) {\n      var _action$target, _target$trim;\n\n      const target = (_action$target = action === null || action === void 0 ? void 0 : action.target) !== null && _action$target !== void 0 ? _action$target : null;\n\n      if (!!target && (target === null || target === void 0 ? void 0 : (_target$trim = target.trim()) === null || _target$trim === void 0 ? void 0 : _target$trim.length) > 0 && target === '_blank') {\n        window.open(url, '_blank');\n      } else {\n        router === null || router === void 0 ? void 0 : router.push(url);\n      }\n    }\n  };\n\n  return __jsx(Card, {\n    className: `${classes.root} ${contentCard['content-card-button']} ${contentCard[variant]}`\n  }, __jsx(CardContent, {\n    className: classes.content\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-9\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(Typography, {\n    style: {\n      color: textColor,\n      fontSize: 24,\n      fontFamily: 'Titillium Web'\n    }\n  }, title))), __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(SanitizedHtml, {\n    content: content,\n    style: {\n      color: textColor,\n      fontSize: 16,\n      fontFamily: 'Titillium Web'\n    }\n  })))), __jsx(\"div\", {\n    className: \"col-3\"\n  }, (actions !== null && actions !== void 0 ? actions : []).map(item => __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(CustomButton, {\n    style: {\n      fontSize: 14\n    },\n    onClick: () => _goToLink(item)\n  }, item === null || item === void 0 ? void 0 : item.label))))))));\n};\n\nexport { ContentCard };","map":null,"metadata":{},"sourceType":"module"}