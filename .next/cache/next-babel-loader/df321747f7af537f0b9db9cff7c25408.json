{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _process$env$BACKEND_;\n\nimport axios from 'axios';\nimport constants from \"../constants\";\nvar BACKEND_URL = (_process$env$BACKEND_ = process.env.BACKEND_URL) !== null && _process$env$BACKEND_ !== void 0 ? _process$env$BACKEND_ : 'http://localhost:5000';\nvar endpoints = {\n  auth: {\n    login: '/auth/login',\n    verifyToken: '/auth/verifyToken'\n  },\n  search: {\n    filters: function filters(indexName) {\n      return \"/filters/\".concat(indexName);\n    },\n    types: function types(indexName) {\n      return \"/types/\".concat(indexName);\n    },\n    datasets: function datasets() {\n      return '/search/dataset';\n    },\n    models: function models() {\n      return '/search/model';\n    }\n  },\n  download: {\n    datasets: function datasets() {\n      return '/download/dataset';\n    },\n    models: function models() {\n      return '/download/model';\n    }\n  }\n};\n\nvar _parseSuccessfullResponse = function _parseSuccessfullResponse(response) {\n  try {\n    if (!!response && response.status === 200) {\n      return response.data;\n    }\n\n    return null;\n  } catch (error) {\n    throw error;\n  }\n};\n\nvar searchDatasets = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var _ref$data_type, data_type, query, filters, _ref$page, page, _ref$hitsPerPage, hitsPerPage, url, response;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref$data_type = _ref.data_type, data_type = _ref$data_type === void 0 ? null : _ref$data_type, query = _ref.query, filters = _ref.filters, _ref$page = _ref.page, page = _ref$page === void 0 ? 0 : _ref$page, _ref$hitsPerPage = _ref.hitsPerPage, hitsPerPage = _ref$hitsPerPage === void 0 ? 20 : _ref$hitsPerPage;\n            url = \"\".concat(BACKEND_URL).concat(endpoints.search.datasets(), \"/\").concat(page, \"/\").concat(hitsPerPage);\n            _context.prev = 2;\n            _context.next = 5;\n            return axios.post(url, {\n              data_type: data_type,\n              query: query,\n              filters: filters\n            });\n\n          case 5:\n            response = _context.sent;\n            return _context.abrupt(\"return\", _parseSuccessfullResponse(response));\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            console.error('@@@@error retrieving datasets');\n            console.error(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 9]]);\n  }));\n\n  return function searchDatasets(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar searchModels = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n    var query, filters, _ref3$page, page, _ref3$hitsPerPage, hitsPerPage, url, response;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            query = _ref3.query, filters = _ref3.filters, _ref3$page = _ref3.page, page = _ref3$page === void 0 ? 0 : _ref3$page, _ref3$hitsPerPage = _ref3.hitsPerPage, hitsPerPage = _ref3$hitsPerPage === void 0 ? 20 : _ref3$hitsPerPage;\n            url = \"\".concat(BACKEND_URL).concat(endpoints.search.models(), \"/\").concat(page, \"/\").concat(hitsPerPage);\n            _context2.prev = 2;\n            _context2.next = 5;\n            return axios.post(url, {\n              query: query,\n              filters: filters\n            });\n\n          case 5:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", _parseSuccessfullResponse(response));\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.error('@@@@error retrieving datasets');\n            console.error(_context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function searchModels(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar getFilters = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref5) {\n    var indexName, type, url, response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            indexName = _ref5.indexName, type = _ref5.type;\n            url = \"\".concat(BACKEND_URL).concat(endpoints.search.filters(indexName));\n\n            if (!!type) {\n              url = \"\".concat(url, \"/\").concat(type);\n            }\n\n            _context3.prev = 3;\n            _context3.next = 6;\n            return axios.get(url);\n\n          case 6:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", _parseSuccessfullResponse(response));\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](3);\n            console.error('@@@@error retrieving data filters');\n            console.error(_context3.t0);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 10]]);\n  }));\n\n  return function getFilters(_x3) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar getTypes = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(indexName) {\n    var url, response;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            url = \"\".concat(BACKEND_URL).concat(endpoints.search.types(indexName));\n            _context4.prev = 1;\n            _context4.next = 4;\n            return axios.get(url);\n\n          case 4:\n            response = _context4.sent;\n            return _context4.abrupt(\"return\", _parseSuccessfullResponse(response));\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](1);\n            console.error('@@@@@error retrieving data types');\n            console.error(_context4.t0);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 8]]);\n  }));\n\n  return function getTypes(_x4) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nvar downloadAllDatasets = function downloadAllDatasets(type) {\n  var url = \"\".concat(BACKEND_URL).concat(endpoints.download.datasets(), \"/all\");\n\n  if (!!type && type.trim().length > 0) {\n    url += \"?data_type=\".concat(type);\n  }\n\n  return url;\n};\n\nvar downloadDatasets = function downloadDatasets() {\n  var ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var url = \"\".concat(BACKEND_URL).concat(endpoints.download.datasets(), \"?ids=\").concat(ids.join(','));\n  return url;\n};\n\nvar downloadAllModels = function downloadAllModels() {\n  var url = \"\".concat(BACKEND_URL).concat(endpoints.download.datasets(), \"/all\");\n  return url;\n};\n\nvar downloadModels = function downloadModels() {\n  var ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var url = \"\".concat(BACKEND_URL).concat(endpoints.download.datasets(), \"?ids=\").concat(ids.join(','));\n  return url;\n};\n\nvar checkMorphologyForShow = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(modelUrl) {\n    var url, response;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            url = \"\".concat(constants.MORPHOLOGY_VIEWER_BASE_URL).concat(modelUrl);\n            _context5.next = 4;\n            return axios.get(url);\n\n          case 4:\n            response = _context5.sent;\n            return _context5.abrupt(\"return\", !!response && !!response.status && response.status === 200);\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](0);\n\n          case 10:\n            return _context5.abrupt(\"return\", false);\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 8]]);\n  }));\n\n  return function checkMorphologyForShow(_x5) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar login = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(username, password) {\n    var url, response;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            url = \"\".concat(BACKEND_URL).concat(endpoints.auth.login);\n            _context6.prev = 1;\n            _context6.next = 4;\n            return axios.post(url, {\n              username: username,\n              password: password\n            });\n\n          case 4:\n            response = _context6.sent;\n\n            if (!(response.status === 200)) {\n              _context6.next = 7;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", {\n              success: true\n            });\n\n          case 7:\n            return _context6.abrupt(\"return\", {\n              error: 'Something was wrong'\n            });\n\n          case 10:\n            _context6.prev = 10;\n            _context6.t0 = _context6[\"catch\"](1);\n            return _context6.abrupt(\"return\", {\n              error: _context6.t0\n            });\n\n          case 13:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 10]]);\n  }));\n\n  return function login(_x6, _x7) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nvar verifyToken = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(token) {\n    var url, response;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            url = \"\".concat(BACKEND_URL).concat(endpoints.auth.verifyToken);\n            _context7.prev = 1;\n            _context7.next = 4;\n            return axios.post(url, {\n              token: token\n            });\n\n          case 4:\n            response = _context7.sent;\n\n            if (!(response.status === 200)) {\n              _context7.next = 7;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", {\n              success: true\n            });\n\n          case 7:\n            return _context7.abrupt(\"return\", {\n              error: 'Something was wrong'\n            });\n\n          case 10:\n            _context7.prev = 10;\n            _context7.t0 = _context7[\"catch\"](1);\n            return _context7.abrupt(\"return\", {\n              error: _context7.t0\n            });\n\n          case 13:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 10]]);\n  }));\n\n  return function verifyToken(_x8) {\n    return _ref10.apply(this, arguments);\n  };\n}();\n\nexport { searchDatasets, searchModels, getFilters, getTypes, downloadAllDatasets, downloadDatasets, downloadAllModels, downloadModels, login, verifyToken, checkMorphologyForShow };","map":null,"metadata":{},"sourceType":"module"}