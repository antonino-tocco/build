{"ast":null,"code":"import _defineProperty from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from \"react\";\nimport { checkIfEmailValid, checkIfNotEmpty } from \"../../helpers/validatorHelper\";\nimport { Button, makeStyles, TextField, Typography } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport Spinner from \"../spinner/spinner\";\nvar useFormStyles = makeStyles(function (theme) {\n  return {\n    header: {\n      fontFamily: 'Nunito, sans-serif',\n      fontSize: 24,\n      fontWeight: 600\n    }\n  };\n});\nvar useFormRowStyles = makeStyles(function (theme) {\n  return {\n    row: {\n      marginBottom: 20\n    }\n  };\n});\nvar useSubmitButtonStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    }\n  };\n});\nvar useAlertStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    }\n  };\n});\n\nfunction ContactForm() {\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(''),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      message = _useState3[0],\n      setMessage = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      success = _useState5[0],\n      setSuccess = _useState5[1];\n\n  var _useState6 = useState({\n    name: true,\n    email: true,\n    message: true\n  }),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useState7 = useState(true),\n      actionDisabled = _useState7[0],\n      setActionDisabled = _useState7[1];\n\n  var _sendMessage = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n\n              try {\n                setSuccess(true);\n              } catch (error) {}\n\n              setLoading(false);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function _sendMessage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _validateData = function _validateData() {\n    var _actionDisabled = false;\n    var isValidName = checkIfNotEmpty(name);\n    var isValidEmail = checkIfEmailValid(email);\n    var isValidMessage = checkIfNotEmpty(message);\n\n    var _error = _objectSpread({}, error);\n\n    _error.name = !isValidName;\n    _error.email = !isValidEmail;\n    _error.message = !isValidMessage;\n    _actionDisabled = !(isValidName && isValidEmail && isValidMessage);\n    setError(_error);\n    setActionDisabled(_actionDisabled);\n  };\n\n  var formClasses = useFormStyles();\n  var formRowClasses = useFormRowStyles();\n  var submitButtonClasses = useSubmitButtonStyles();\n  var alertClasses = useAlertStyles();\n  useEffect(function () {\n    _validateData();\n  }, [name, email, message]);\n  return __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    }\n  }, __jsx(\"form\", {\n    className: \"form\"\n  }, __jsx(Typography, {\n    className: formClasses.header,\n    gutterBottom: true\n  }, \"Contattaci\"), __jsx(\"div\", {\n    className: \"input-group \".concat(formRowClasses.row)\n  }, __jsx(TextField, {\n    name: \"name\",\n    fullWidth: true,\n    label: 'Il tuo nome',\n    variant: 'outlined',\n    defaultValue: name,\n    onChange: function onChange(event) {\n      return setName(event.target.value);\n    },\n    helperText: 'Campo richiesto'\n  })), __jsx(\"div\", {\n    className: \"input-group \".concat(formRowClasses.row)\n  }, __jsx(TextField, {\n    name: \"email\",\n    fullWidth: true,\n    label: 'La tua email',\n    variant: 'outlined',\n    onChange: function onChange(event) {\n      return setEmail(event.target.value);\n    },\n    helperText: 'Inserisci un indirizzo email valido'\n  })), __jsx(\"div\", {\n    className: \"input-group \".concat(formRowClasses.row)\n  }, __jsx(TextField, {\n    name: \"message\",\n    fullWidth: true,\n    label: 'Il tuo messaggio',\n    variant: 'outlined',\n    helperText: 'Campo richiesto',\n    multiline: true,\n    rowsMax: 4,\n    onChange: function onChange(event) {\n      return setMessage(event.target.value);\n    }\n  })), __jsx(\"div\", {\n    className: \"input-group \".concat(formRowClasses.row)\n  }, __jsx(Button, {\n    classes: submitButtonClasses,\n    variant: \"outlined\",\n    disabled: actionDisabled,\n    onClick: function onClick() {\n      return _sendMessage();\n    }\n  }, \"INVIA\")), __jsx(\"div\", {\n    className: \"input-group \".concat(formRowClasses.row)\n  }, success ? __jsx(Alert, {\n    classes: alertClasses,\n    severity: \"success\"\n  }, \"Il messaggio \\xE8 stato inviato correttamente\") : null)), loading ? __jsx(Spinner, null) : null);\n}\n\nexport default ContactForm;","map":null,"metadata":{},"sourceType":"module"}