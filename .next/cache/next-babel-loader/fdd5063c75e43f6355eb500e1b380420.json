{"ast":null,"code":"import _extends from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/mnt/c/Users/enton/Workspace/cnr/build/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Close as IconClose } from '@material-ui/icons';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport { checkIfNotEmpty } from \"../../helpers/validatorHelper\";\nimport parse from 'html-react-parser';\nimport dialogContainerStyle from './dialog.module.scss';\nimport { useIconButtonStyles } from \"../../style/style\";\nimport { CustomButton } from \"../buttons/buttons\";\n\nvar useDialogStyles = function useDialogStyles(height) {\n  return makeStyles(function (theme) {\n    return {\n      paper: {\n        borderTop: '10px solid #333',\n        borderRadius: 10,\n        height: height !== null && height !== void 0 ? height : 'auto'\n      }\n    };\n  });\n};\n\nexport function DialogContainer(_ref) {\n  var open = _ref.open,\n      title = _ref.title,\n      subtitle = _ref.subtitle,\n      children = _ref.children,\n      actions = _ref.actions,\n      height = _ref.height,\n      onClose = _ref.onClose,\n      props = _objectWithoutProperties(_ref, [\"open\", \"title\", \"subtitle\", \"children\", \"actions\", \"height\", \"onClose\"]);\n\n  var classes = useDialogStyles(height)();\n  var iconButtonStyles = useIconButtonStyles();\n  return __jsx(Dialog, _extends({\n    classes: classes,\n    open: open\n  }, props), __jsx(DialogTitle, null, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-10\"\n  }, checkIfNotEmpty(title) ? __jsx(\"p\", {\n    className: dialogContainerStyle['dialog-title']\n  }, title) : null, checkIfNotEmpty(subtitle) ? __jsx(\"p\", {\n    className: dialogContainerStyle['dialog-subtitle']\n  }, parse(subtitle)) : null), __jsx(\"div\", {\n    className: \"col-2 text-right\"\n  }, __jsx(IconButton, {\n    onClick: onClose,\n    className: iconButtonStyles.root\n  }, __jsx(IconClose, null))))), __jsx(DialogContent, null, children), !!actions && actions.length > 0 ? __jsx(DialogActions, null, actions === null || actions === void 0 ? void 0 : actions.map(function (item) {\n    return __jsx(CustomButton, {\n      onClick: function onClick() {\n        return item.onClick();\n      }\n    }, item.label);\n  })) : null);\n}","map":null,"metadata":{},"sourceType":"module"}