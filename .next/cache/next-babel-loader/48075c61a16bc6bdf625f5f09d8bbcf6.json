{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from \"react\";\nimport { CustomButton } from \"../buttons/buttons\";\nimport { Card, makeStyles, Typography } from \"@material-ui/core\";\nimport constants from \"../../constants\";\nimport * as hodgkinHuxleyBaloonStyle from './index.module.scss';\nimport { TagView } from \"../tags/tagView\";\nimport { hashCode } from \"../../helpers/hashHelper\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: 10\n  }\n}));\nexport function HodgkinHuxleyBaloon({\n  morphology,\n  electrophysiologies,\n  modFiles,\n  removeMorphology,\n  removeElectrophysiology,\n  removeModFile,\n  clear,\n  variant\n}) {\n  const classes = useStyles();\n\n  const _sendToHodgkinHuxley = () => {\n    const HFFComm = {};\n\n    if (!!morphology) {\n      var _morphology$url;\n\n      const fileUrlSplitted = ((_morphology$url = morphology === null || morphology === void 0 ? void 0 : morphology.url) !== null && _morphology$url !== void 0 ? _morphology$url : '').split('.');\n      const fileExtension = fileUrlSplitted.length > 1 ? fileUrlSplitted[fileUrlSplitted.length - 1] : '';\n      HFFComm.morphology = {\n        name: encodeURIComponent(`${morphology === null || morphology === void 0 ? void 0 : morphology.name}`),\n        url: encodeURIComponent(morphology === null || morphology === void 0 ? void 0 : morphology.url)\n      };\n    }\n\n    if (!!electrophysiologies) {\n      HFFComm.electrophysiologies = electrophysiologies === null || electrophysiologies === void 0 ? void 0 : electrophysiologies.map(item => {\n        var _item$metadata$url, _item$metadata;\n\n        return {\n          name: encodeURIComponent(item === null || item === void 0 ? void 0 : item.name),\n          url: encodeURIComponent(item === null || item === void 0 ? void 0 : item.url),\n          metadata: encodeURIComponent((_item$metadata$url = item === null || item === void 0 ? void 0 : (_item$metadata = item.metadata) === null || _item$metadata === void 0 ? void 0 : _item$metadata.url) !== null && _item$metadata$url !== void 0 ? _item$metadata$url : null)\n        };\n      });\n    }\n\n    if (!!modFiles && (modFiles === null || modFiles === void 0 ? void 0 : modFiles.length) > 0) {\n      HFFComm.modFiles = modFiles === null || modFiles === void 0 ? void 0 : modFiles.map(item => ({\n        name: encodeURIComponent(item === null || item === void 0 ? void 0 : item.label),\n        url: encodeURIComponent(item === null || item === void 0 ? void 0 : item.url)\n      }));\n    }\n\n    if (!!window) {\n      let url = `${constants.HODGKIN_HUXLEY_BASE_URL}/`;\n\n      if (Object.keys(HFFComm).length > 0) {\n        url += `hhf-comm?hhf_dict=${JSON.stringify({\n          [constants.HHF_COMM]: HFFComm\n        })}`;\n      }\n\n      window.open(url);\n    } //_clear();\n\n  };\n\n  const _onRemoveMorphology = () => {\n    if (!!removeMorphology) {\n      removeMorphology();\n    }\n  };\n\n  const _onRemoveElectrophysiology = item => {\n    if (!!removeElectrophysiology) {\n      removeElectrophysiology(item);\n    }\n  };\n\n  const _onRemoveModFile = item => {\n    if (!!removeModFile) {\n      removeModFile(item);\n    }\n  };\n\n  const _clear = () => {\n    if (!!clear) {\n      clear();\n    }\n  };\n\n  const hasMorphology = !!morphology;\n  const hasElectrophysiology = !!electrophysiologies && (electrophysiologies === null || electrophysiologies === void 0 ? void 0 : electrophysiologies.length) > 0;\n  const hasModFiles = !!modFiles && (modFiles === null || modFiles === void 0 ? void 0 : modFiles.length) > 0;\n  return __jsx(\"div\", null, __jsx(Card, {\n    classes: classes\n  }, __jsx(\"div\", {\n    className: `${hodgkinHuxleyBaloonStyle['hodgkin-huxley-baloon']} ${!!variant ? hodgkinHuxleyBaloonStyle[variant] : null}`\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(Typography, {\n    className: hodgkinHuxleyBaloonStyle['hodgkin-huxley-baloon-header-label'],\n    variant: \"subtitle1\"\n  }, \"Hodgkin-Huxley Neuron Builder\")), __jsx(\"div\", {\n    className: \"col-6\"\n  }, hasMorphology ? __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(\"span\", {\n    className: hodgkinHuxleyBaloonStyle['hodgkin-huxley-baloon-label']\n  }, \"Morphology:\"), __jsx(TagView, {\n    label: morphology === null || morphology === void 0 ? void 0 : morphology.name,\n    item: morphology,\n    onRemoveClicked: _onRemoveMorphology\n  }))) : null, hasElectrophysiology ? __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(\"span\", {\n    className: hodgkinHuxleyBaloonStyle['hodgkin-huxley-baloon-label']\n  }, \"Electrophysiologies:\"), electrophysiologies === null || electrophysiologies === void 0 ? void 0 : electrophysiologies.map(item => __jsx(TagView, {\n    key: `electrophysiology-${hashCode(JSON.stringify(item))}`,\n    label: item === null || item === void 0 ? void 0 : item.name,\n    item: item,\n    onRemoveClicked: _onRemoveElectrophysiology\n  })))) : null, hasModFiles ? __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      marginTop: 20\n    }\n  }, __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(\"span\", {\n    className: hodgkinHuxleyBaloonStyle['hodgkin-huxley-baloon-label']\n  }, \"Mod File(s):\"), modFiles === null || modFiles === void 0 ? void 0 : modFiles.map(item => __jsx(TagView, {\n    key: `model-${hashCode(JSON.stringify(item))}`,\n    label: item === null || item === void 0 ? void 0 : item.label,\n    item: item,\n    onRemoveClicked: _onRemoveModFile\n  })))) : null), __jsx(\"div\", {\n    className: \"col-6 text-right\"\n  }, __jsx(CustomButton, {\n    onClick: () => _sendToHodgkinHuxley(),\n    style: {\n      float: 'right',\n      fontSize: 12\n    },\n    isCta: true\n  }, \"Launch HH Neuron Builder\"), hasMorphology || hasModFiles ? __jsx(CustomButton, {\n    onClick: () => _clear(),\n    style: {\n      float: 'right',\n      fontSize: 12,\n      marginRight: 20\n    },\n    isCta: true\n  }, \"CLEAR ALL\") : null)))));\n}","map":null,"metadata":{},"sourceType":"module"}